name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build binaries
      run: |
        GOOS=linux GOARCH=amd64 go build -o k1space_linux_amd64 .
        GOOS=linux GOARCH=arm64 go build -o k1space_linux_arm64 .
        GOOS=darwin GOARCH=amd64 go build -o k1space_darwin_amd64 .
        GOOS=darwin GOARCH=arm64 go build -o k1space_darwin_arm64 .
        GOOS=windows GOARCH=amd64 go build -o k1space_windows_amd64.exe .

    - name: Get version
      id: get_version
      run: echo ::set-output name=VERSION::$(git describe --tags --always)

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./k1space_linux_amd64
        asset_name: k1space_linux_amd64
        asset_content_type: application/octet-stream

    - name: Upload Release Assets (Linux ARM64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./k1space_linux_arm64
        asset_name: k1space_linux_arm64
        asset_content_type: application/octet-stream

    - name: Upload Release Assets (macOS AMD64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./k1space_darwin_amd64
        asset_name: k1space_darwin_amd64
        asset_content_type: application/octet-stream

    - name: Upload Release Assets (macOS ARM64)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./k1space_darwin_arm64
        asset_name: k1space_darwin_arm64
        asset_content_type: application/octet-stream

    - name: Upload Release Assets (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./k1space_windows_amd64.exe
        asset_name: k1space_windows_amd64.exe
        asset_content_type: application/octet-stream
